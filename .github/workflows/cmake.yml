name: CMake

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]
        use_ssl: [ON, OFF]

    env:
      BUILD_TYPE: ${{ matrix.build_type }}
      USE_SSL: ${{ matrix.use_ssl }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libboost-all-dev

      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install boost-msvc-14.3
          echo "##[group]Setting Boost environment variables"
          $boostRoot = "C:\Program Files\boost\boost_1_86_0"
          echo "BOOST_ROOT=$boostRoot" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_INCLUDEDIR=$boostRoot" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "BOOST_LIBRARYDIR=$boostRoot\lib64-msvc-14.3" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          echo "##[endgroup]"

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install boost

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSE_SSL=${{env.USE_SSL}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}} --rerun-failed --output-on-failure
